2025-08-09 10:32:32,380 - main - INFO - Application starting up...
2025-08-09 10:32:32,928 - main - INFO - Client #4ip1a50gnm5 connected for multimodal session
2025-08-09 10:32:32,928 - main - INFO - Created new session 8d5c102b-cac9-440a-b8a6-bd4e8e9bc73b for user 4ip1a50gnm5
2025-08-09 10:32:32,930 - google_adk.google.adk.models.google_llm - INFO - Connecting to live with llm_request:model='gemini-live-2.5-flash-preview-native-audio' contents=[] config=GenerateContentConfig(
  system_instruction="""You are a friendly and helpful AI assistant with a charming personality. Your goal is to answer the user's question as accurately as possible, and to be as entertaining as possible. Delegate to the available sub-agents to help you answer the user's question

You are an agent. Your internal name is "budi".

 The description about you is "Root agent that delegates to sub-agents when responding to user queries."""",
  tools=[
    Tool(
      function_declarations=[
        FunctionDeclaration(
          description='Agent to answer questions',
          name='q_and_a',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
        FunctionDeclaration(
          description='Agent to get the weather',
          name='weather',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
      ]
    ),
  ]
) live_connect_config=LiveConnectConfig(
  enable_affective_dialog=True,
  input_audio_transcription=AudioTranscriptionConfig(),
  output_audio_transcription=AudioTranscriptionConfig(),
  proactivity=ProactivityConfig(
    proactive_audio=True
  ),
  realtime_input_config=RealtimeInputConfig(
    activity_handling=<ActivityHandling.NO_INTERRUPTION: 'NO_INTERRUPTION'>,
    automatic_activity_detection=AutomaticActivityDetection(
      disabled=False,
      end_of_speech_sensitivity=<EndSensitivity.END_SENSITIVITY_HIGH: 'END_SENSITIVITY_HIGH'>,
      prefix_padding_ms=20,
      silence_duration_ms=100,
      start_of_speech_sensitivity=<StartSensitivity.START_SENSITIVITY_HIGH: 'START_SENSITIVITY_HIGH'>
    ),
    turn_coverage=<TurnCoverage.TURN_INCLUDES_ALL_INPUT: 'TURN_INCLUDES_ALL_INPUT'>
  ),
  speech_config=SpeechConfig(
    voice_config=VoiceConfig(
      prebuilt_voice_config=PrebuiltVoiceConfig(
        voice_name='Aoede'
      )
    )
  ),
  system_instruction=Content(
    parts=[
      Part(
        text="""You are a friendly and helpful AI assistant with a charming personality. Your goal is to answer the user's question as accurately as possible, and to be as entertaining as possible. Delegate to the available sub-agents to help you answer the user's question

You are an agent. Your internal name is "budi".

 The description about you is "Root agent that delegates to sub-agents when responding to user queries.""""
      ),
    ],
    role='system'
  ),
  tools=[
    Tool(
      function_declarations=[
        FunctionDeclaration(
          description='Agent to answer questions',
          name='q_and_a',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
        FunctionDeclaration(
          description='Agent to get the weather',
          name='weather',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
      ]
    ),
  ]
) tools_dict={'q_and_a': <google.adk.tools.agent_tool.AgentTool object at 0x1340993d0>, 'weather': <google.adk.tools.agent_tool.AgentTool object at 0x1326d8530>}
2025-08-09 10:32:32,984 - google.auth._default - DEBUG - Checking None for explicit credentials as part of auth process...
2025-08-09 10:32:32,984 - google.auth._default - DEBUG - Checking Cloud SDK credentials as part of auth process...
2025-08-09 10:32:33,552 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): oauth2.googleapis.com:443
2025-08-09 10:32:33,717 - urllib3.connectionpool - DEBUG - https://oauth2.googleapis.com:443 "POST /token HTTP/1.1" 200 None
2025-08-09 10:32:34,023 - google_genai.live - INFO - b'{\n  "setupComplete": {\n    "sessionId": "e38d151d-1988-4cf0-ae7f-158b690ab0c6"\n  }\n}\n'
2025-08-09 10:32:48,628 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:32:51,154 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:32:54,547 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:32:57,136 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:33:02,493 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:33:06,023 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:33:08,750 - main - DEBUG - WebSocket disconnected during message handling
2025-08-09 10:33:08,751 - main - INFO - Client #4ip1a50gnm5 connected for multimodal session
2025-08-09 10:33:08,751 - main - INFO - Created new session 311c56db-ba0c-4ace-a4d2-d0a504f501ff for user 4ip1a50gnm5
2025-08-09 10:33:08,753 - google_adk.google.adk.models.google_llm - INFO - Connecting to live with llm_request:model='gemini-live-2.5-flash-preview-native-audio' contents=[] config=GenerateContentConfig(
  system_instruction="""You are a friendly and helpful AI assistant with a charming personality. Your goal is to answer the user's question as accurately as possible, and to be as entertaining as possible. Delegate to the available sub-agents to help you answer the user's question

You are an agent. Your internal name is "budi".

 The description about you is "Root agent that delegates to sub-agents when responding to user queries."""",
  tools=[
    Tool(
      function_declarations=[
        FunctionDeclaration(
          description='Agent to answer questions',
          name='q_and_a',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
        FunctionDeclaration(
          description='Agent to get the weather',
          name='weather',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
      ]
    ),
  ]
) live_connect_config=LiveConnectConfig(
  enable_affective_dialog=True,
  input_audio_transcription=AudioTranscriptionConfig(),
  output_audio_transcription=AudioTranscriptionConfig(),
  proactivity=ProactivityConfig(
    proactive_audio=True
  ),
  realtime_input_config=RealtimeInputConfig(
    activity_handling=<ActivityHandling.NO_INTERRUPTION: 'NO_INTERRUPTION'>,
    automatic_activity_detection=AutomaticActivityDetection(
      disabled=False,
      end_of_speech_sensitivity=<EndSensitivity.END_SENSITIVITY_HIGH: 'END_SENSITIVITY_HIGH'>,
      prefix_padding_ms=20,
      silence_duration_ms=100,
      start_of_speech_sensitivity=<StartSensitivity.START_SENSITIVITY_HIGH: 'START_SENSITIVITY_HIGH'>
    ),
    turn_coverage=<TurnCoverage.TURN_INCLUDES_ALL_INPUT: 'TURN_INCLUDES_ALL_INPUT'>
  ),
  speech_config=SpeechConfig(
    voice_config=VoiceConfig(
      prebuilt_voice_config=PrebuiltVoiceConfig(
        voice_name='Aoede'
      )
    )
  ),
  system_instruction=Content(
    parts=[
      Part(
        text="""You are a friendly and helpful AI assistant with a charming personality. Your goal is to answer the user's question as accurately as possible, and to be as entertaining as possible. Delegate to the available sub-agents to help you answer the user's question

You are an agent. Your internal name is "budi".

 The description about you is "Root agent that delegates to sub-agents when responding to user queries.""""
      ),
    ],
    role='system'
  ),
  tools=[
    Tool(
      function_declarations=[
        FunctionDeclaration(
          description='Agent to answer questions',
          name='q_and_a',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
        FunctionDeclaration(
          description='Agent to get the weather',
          name='weather',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
      ]
    ),
  ]
) tools_dict={'q_and_a': <google.adk.tools.agent_tool.AgentTool object at 0x1340993d0>, 'weather': <google.adk.tools.agent_tool.AgentTool object at 0x1326d8530>}
2025-08-09 10:33:09,334 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): oauth2.googleapis.com:443
2025-08-09 10:33:09,496 - urllib3.connectionpool - DEBUG - https://oauth2.googleapis.com:443 "POST /token HTTP/1.1" 200 None
2025-08-09 10:33:09,802 - google_genai.live - INFO - b'{\n  "setupComplete": {\n    "sessionId": "97f70967-21eb-4386-ae5c-74b55a695b0a"\n  }\n}\n'
2025-08-09 10:33:26,454 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:27,450 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:28,448 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:29,446 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:30,451 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:31,444 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:32,450 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:33,456 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:33,489 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:33:34,453 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:35,445 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:36,444 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:37,193 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:33:37,444 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:38,445 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:39,443 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:40,445 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:41,450 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:42,451 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:43,452 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:44,446 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:45,224 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:33:45,451 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:46,454 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:47,446 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:48,445 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:49,129 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:33:49,447 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:50,388 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:33:50,446 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:53,581 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:33:54,293 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:55,288 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:56,288 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:57,289 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:58,296 - main - INFO - Processing video frame from webcam
2025-08-09 10:33:59,288 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:00,290 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:01,298 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:02,289 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:03,138 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:34:03,288 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:04,294 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:05,288 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:06,290 - main - INFO - Processing video frame from webcam
2025-08-09 10:34:07,102 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:34:08,474 - google_adk.google.adk.agents.llm_agent - DEBUG - Skipping output save for agent budi: event authored by user
2025-08-09 10:34:14,203 - main - DEBUG - [AGENT TO CLIENT]: {'turn_complete': True, 'interrupted': None}
2025-08-09 10:34:16,137 - main - DEBUG - WebSocket disconnected during message handling
2025-08-09 10:34:16,141 - main - INFO - Client #4ip1a50gnm5 connected for multimodal session
2025-08-09 10:34:16,141 - main - INFO - Created new session 63a4d0bb-64a5-4710-96ec-3767c129c52d for user 4ip1a50gnm5
2025-08-09 10:34:16,143 - google_adk.google.adk.models.google_llm - INFO - Connecting to live with llm_request:model='gemini-live-2.5-flash-preview-native-audio' contents=[] config=GenerateContentConfig(
  system_instruction="""You are a friendly and helpful AI assistant with a charming personality. Your goal is to answer the user's question as accurately as possible, and to be as entertaining as possible. Delegate to the available sub-agents to help you answer the user's question

You are an agent. Your internal name is "budi".

 The description about you is "Root agent that delegates to sub-agents when responding to user queries."""",
  tools=[
    Tool(
      function_declarations=[
        FunctionDeclaration(
          description='Agent to answer questions',
          name='q_and_a',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
        FunctionDeclaration(
          description='Agent to get the weather',
          name='weather',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
      ]
    ),
  ]
) live_connect_config=LiveConnectConfig(
  enable_affective_dialog=True,
  input_audio_transcription=AudioTranscriptionConfig(),
  output_audio_transcription=AudioTranscriptionConfig(),
  proactivity=ProactivityConfig(
    proactive_audio=True
  ),
  realtime_input_config=RealtimeInputConfig(
    activity_handling=<ActivityHandling.NO_INTERRUPTION: 'NO_INTERRUPTION'>,
    automatic_activity_detection=AutomaticActivityDetection(
      disabled=False,
      end_of_speech_sensitivity=<EndSensitivity.END_SENSITIVITY_HIGH: 'END_SENSITIVITY_HIGH'>,
      prefix_padding_ms=20,
      silence_duration_ms=100,
      start_of_speech_sensitivity=<StartSensitivity.START_SENSITIVITY_HIGH: 'START_SENSITIVITY_HIGH'>
    ),
    turn_coverage=<TurnCoverage.TURN_INCLUDES_ALL_INPUT: 'TURN_INCLUDES_ALL_INPUT'>
  ),
  speech_config=SpeechConfig(
    voice_config=VoiceConfig(
      prebuilt_voice_config=PrebuiltVoiceConfig(
        voice_name='Aoede'
      )
    )
  ),
  system_instruction=Content(
    parts=[
      Part(
        text="""You are a friendly and helpful AI assistant with a charming personality. Your goal is to answer the user's question as accurately as possible, and to be as entertaining as possible. Delegate to the available sub-agents to help you answer the user's question

You are an agent. Your internal name is "budi".

 The description about you is "Root agent that delegates to sub-agents when responding to user queries.""""
      ),
    ],
    role='system'
  ),
  tools=[
    Tool(
      function_declarations=[
        FunctionDeclaration(
          description='Agent to answer questions',
          name='q_and_a',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
        FunctionDeclaration(
          description='Agent to get the weather',
          name='weather',
          parameters=Schema(
            properties={
              <... Max depth ...>: <... Max depth ...>
            },
            required=[
              <... Max depth ...>,
            ],
            type=<Type.OBJECT: 'OBJECT'>
          ),
          response=Schema(
            type=<Type.STRING: 'STRING'>
          )
        ),
      ]
    ),
  ]
) tools_dict={'q_and_a': <google.adk.tools.agent_tool.AgentTool object at 0x1340993d0>, 'weather': <google.adk.tools.agent_tool.AgentTool object at 0x1326d8530>}
2025-08-09 10:34:16,670 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): oauth2.googleapis.com:443
2025-08-09 10:34:16,854 - urllib3.connectionpool - DEBUG - https://oauth2.googleapis.com:443 "POST /token HTTP/1.1" 200 None
2025-08-09 10:34:17,136 - google_genai.live - INFO - b'{\n  "setupComplete": {\n    "sessionId": "7fd5ea2b-ec42-41df-ba81-4193b53af3b1"\n  }\n}\n'
